@using Microsoft.JSInterop
@using WebApplication1.DbModels
@model PostViewModel
@{
    ViewData["Title"] = Model.Title+" ";
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js" integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF" crossorigin="anonymous"></script>

    <style>
        .posts{
            border-radius: 5px;
            border: solid 5px;
            padding: 5px;
            margin: 15px;
        }
    </style>
</head>
<body>
    <h1>@Model.Title</h1>


    <div class="posts">
        <h3>Game - @Model.Game</h3>

        @foreach (var content in Model.Contents)
        {

            if (content.ContentType == "Image")
            {
                var base64Image = Convert.ToBase64String(content.Content);
                var imageSrc = $"data:image/png;base64,{base64Image}";
                <div>
                    <img src="@imageSrc" alt="Image" class="img-fluid" />
                </div>
            }
            else if (content.ContentType == "Video")
            {
                var videoSrc = $"data:video/mp4;base64,{Convert.ToBase64String(content.Content)}";
                <div>
                    <div class="embed-responsive embed-responsive-16by9">
                        <iframe class="embed-responsive-item" src="@videoSrc"></iframe>
                    </div>
                </div>
            }

            else
            {
                var textContent = System.Text.Encoding.UTF8.GetString(content.Content);
                <div>
                    <p>@textContent</p>
                </div>
            }
        }
        <div id="reactions">
            <button id="like-button">👍 Like</button>
            <span id="like-count">0</span>

            <button id="dislike-button">👎 Dislike</button>
            <span id="dislike-count">0</span>
        </div>
    </div>


</body>

<script>
    const postId = @Model.Id; 

    function updateReactions() {
        $.ajax({
            url: '@Url.Action("GetLikes", "Posts")',
            method: 'GET',
            data: { postId: postId }, 
            success: function (data) {
                $('#like-count').text(data);
            }
        });

        $.ajax({
            url: '@Url.Action("GetDisLikes", "Posts")',
            method: 'GET',
            data: { postId: postId }, 
            success: function (data) {
                $('#dislike-count').text(data);
            }
        });
    }

    function makeReaction(value) {
        $.ajax({
            url: '@Url.Action("MakeReactions", "Posts")',
            method: 'POST',
            data: { value:value, postId: postId },
            success: function () {
                updateReactions();
            },
            error: function (xhr) {
                console.error(xhr.responseText); 
                alert('Error setting reaction.');
            }
        });
    }



    $('#like-button').click(function () {
        makeReaction(1);
    });

    $('#dislike-button').click(function () {
        makeReaction(-1);
    });
    updateReactions();
</script>




   
