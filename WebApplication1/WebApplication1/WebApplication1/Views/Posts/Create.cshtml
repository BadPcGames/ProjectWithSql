@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model WebApplication1.DbModels.Post

<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

</head>

<h1>Редактор постов для блога: @Model.BlogId</h1>

<form asp-action="Create" asp-route-blogId="@Model.BlogId" id="postForm" method="post" enctype="multipart/form-data">
    <input type="hidden" asp-for="BlogId" />

    <h2>Название</h2>
    <input asp-for="Title" class="form-control" required />
    <span asp-validation-for="Title" class="text-danger"></span>

    <h2>Игра</h2>
    <select id="gameSelect" name="Game" class="form-control" required>
        <option value="">Выберите игру...</option>
    </select>
    <span asp-validation-for="Game" class="text-danger"></span>

    <h2>Контент</h2>
    <div id="contentModules">
        <!-- Для контенту -->
    </div>

    <div class="buttons">
        <button type="button" id="addTextModule">Добавить текст</button>
        <button type="button" id="addImageModule">Добавить изображение</button>
        <button type="button" id="addVideoModule">Добавить видео</button>
    </div>

    <button type="submit" class="btn btn-primary">Сохранить пост</button>
</form>

<script>
    $(document).ready(function () {
        $.ajax({
            url: '@Url.Action("GetGames", "Posts")',
            method: 'GET',
            success: function (games) {
                games.forEach(function (game) {
                    $("#gameSelect").append(`<option value="${game.gameName}">${game.gameName}</option>`);
                });
            },
            error: function () {
                console.error("Не удалось загрузить список игр.");
            }
        });
    });

    let moduleIndex = 0;

    function addModule(contentType) {
        const container = document.getElementById("contentModules");
        const newModule = document.createElement("div");
        newModule.classList.add("content-module");

        if (contentType === "Text") {
            newModule.innerHTML = `
                    <div class="module-content">
                        <input type="hidden" name="Contents[${moduleIndex}].ContentType" value="${contentType}" />
                        <label>Контент (${contentType}):</label>
                        <textarea name="Contents[${moduleIndex}].Content" class="form-control" required></textarea>
                        <label>Позиция:</label>
                        <input type="number" name="Contents[${moduleIndex}].Position" class="form-control" value="${moduleIndex}" required />
                        <button type="button" onclick="removeModule(this)">Удалить</button>
                    </div>
                `;
        } else {
            newModule.innerHTML = `
                    <div class="module-content">
                        <input type="hidden" name="Contents[${moduleIndex}].ContentType" value="${contentType}" />
                        <label>Контент (${contentType}):</label>
                        <input type="file" name="Contents[${moduleIndex}].FormFile" class="form-control" required />
                        <label>Позиция:</label>
                        <input type="number" name="Contents[${moduleIndex}].Position" class="form-control" value="${moduleIndex}" required />
                        <button type="button" onclick="removeModule(this)">Удалить</button>
                    </div>
                `;
        }

        container.appendChild(newModule);
        moduleIndex++;
    }

    function removeModule(button) {
        const module = button.closest(".content-module");
        if (module) {
            module.remove();
        } else {
            console.error("Не удалось найти родительский элемент .content-module.");
        }
    }

    document.getElementById("addTextModule").addEventListener("click", () => addModule("Text"));
    document.getElementById("addImageModule").addEventListener("click", () => addModule("Image"));
    document.getElementById("addVideoModule").addEventListener("click", () => addModule("Video"));
</script>
